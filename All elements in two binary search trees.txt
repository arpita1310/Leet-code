class Solution {
public:
    void inOrder(TreeNode* root, vector<int>& ans){
        if(root == nullptr)
            return;
        inOrder(root->left, ans);
        ans.push_back(root->val);
        inOrder(root->right, ans);
    }
    vector<int> merge(vector<int>& ans1, vector<int>& ans2){
        vector<int> result;;
        int t1Indx = 0;
        int t2Indx = 0;
        while(t1Indx < ans1.size() && t2Indx < ans2.size()){
            if(ans1[t1Indx] < ans2[t2Indx])
                result.push_back(ans1[t1Indx++]);
            else
                result.push_back(ans2[t2Indx++]);
            
        }
        while(t1Indx < ans1.size()){
            result.push_back(ans1[t1Indx++]);
        }
         while(t2Indx < ans2.size()){
            result.push_back(ans2[t2Indx++]);
        }
        return result;
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        vector<int> ans1;
        vector<int> ans2;
        inOrder(root1, ans1);
        inOrder(root2, ans2);
        return merge(ans1, ans2);
    }
};

