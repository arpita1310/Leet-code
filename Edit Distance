int PureRecursive(string &word1, string &word2,int m, int n){
        if(m == 0) return n;
        if(n == 0) return m;
        if(word1[m-1] == word2[n-1]){
            return PureRecursive(word1,word2,m-1,n-1);
        }
        else{
            return 1 + min(PureRecursive(word1,word2,m-1,n-1),min(PureRecursive(word1,word2,m-1,n),PureRecursive(word1,word2,m,n-1)));
        }
    }
    int minDistance(string word1, string word2) {
        vector<vector<int>> dp(word1.size() + 1, std::vector<int>(word2.size() + 1, -1));
        return bottomUpDp(word1,word2,word1.size(),word2.size(),dp);
    }
};
